/*
 * Stoat, a USI shogi engine
 * Copyright (C) 2025 Ciekce
 *
 * Stoat is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Stoat is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Stoat. If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

#include "../../types.h"

#include <array>
#include <cassert>
#include <span>

#include "../../core.h"

namespace stoat::attacks::sliders::black_magic {
    constexpr std::array kLanceShifts = {
        // black
        std::array{
            121, 121, 121, 121, 121, 121, 121, 121, 121, //
            122, 122, 122, 122, 122, 122, 122, 122, 122, //
            123, 123, 123, 123, 123, 123, 123, 123, 123, //
            124, 124, 124, 124, 124, 124, 124, 124, 124, //
            125, 125, 125, 125, 125, 125, 125, 125, 125, //
            126, 126, 126, 126, 126, 126, 126, 126, 126, //
            127, 127, 127, 127, 127, 127, 127, 127, 127, //
            0,   0,   0,   0,   0,   0,   0,   0,   0,   //
            0,   0,   0,   0,   0,   0,   0,   0,   0,   //
        },
        // white
        std::array{
            0,   0,   0,   0,   0,   0,   0,   0,   0,   //
            0,   0,   0,   0,   0,   0,   0,   0,   0,   //
            127, 127, 127, 127, 127, 127, 127, 127, 127, //
            126, 126, 126, 126, 126, 126, 126, 126, 126, //
            125, 125, 125, 125, 125, 125, 125, 125, 125, //
            124, 124, 124, 124, 124, 124, 124, 124, 124, //
            123, 123, 123, 123, 123, 123, 123, 123, 123, //
            122, 122, 122, 122, 122, 122, 122, 122, 122, //
            121, 121, 121, 121, 121, 121, 121, 121, 121, //
        }
    };

    constexpr std::array kBishopShifts = {
        121, 122, 122, 122, 122, 122, 122, 122, 121, //
        122, 122, 122, 122, 122, 122, 122, 122, 122, //
        122, 122, 120, 120, 120, 120, 120, 122, 122, //
        122, 122, 120, 118, 118, 118, 120, 122, 122, //
        122, 122, 120, 118, 116, 118, 120, 122, 122, //
        122, 122, 120, 118, 118, 118, 120, 122, 122, //
        122, 122, 120, 120, 120, 120, 120, 122, 122, //
        122, 122, 122, 122, 122, 122, 122, 122, 122, //
        121, 122, 122, 122, 122, 122, 122, 122, 121, //
    };

    constexpr std::array kRookShifts = {
        114, 115, 115, 115, 115, 115, 115, 115, 114, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        115, 116, 116, 116, 116, 116, 116, 116, 115, //
        114, 115, 115, 115, 115, 115, 115, 115, 114, //
    };

    constexpr std::array kLanceMagics = {
        // black
        std::array{
            U128(0x802002101300e280, 0x4419000080c0c021),
            U128(0x8004080881001205, 0x8002404800000400),
            U128(0x4012080250880, 0x2000400108400001),
            U128(0x20a0200108182, 0x1408400002404840),
            U128(0x4001480208800, 0x2100400028301082),
            U128(0x100c062402132, 0x9201000811410),
            U128(0x1000b12020600088, 0x2480000400000180),
            U128(0xe02004100079, 0x2004080140024404),
            U128(0x100140400880c02, 0x8180000008080000),
            U128(0x8011811882200a2, 0x2000000046204130),
            U128(0x82204a203810410, 0x8008110000208082),
            U128(0x22220148c08024, 0x4000004280480000),
            U128(0x8000024240801163, 0x20200080001040),
            U128(0x90200908218c008, 0x200160010840024),
            U128(0x800080a1082000, 0x8081080008022010),
            U128(0x1011810891004, 0x88001040010000),
            U128(0x240280c08100c04, 0xc40020190102180),
            U128(0x108081504, 0x40100008440c0008),
            U128(0x3004000114008a10, 0xc00040c310000004),
            U128(0x3004000114008a10, 0xc00040c310000004),
            U128(0x2000000481810804, 0x2004120402004000),
            U128(0x1022828010, 0x7500000100040201),
            U128(0x407300040104002, 0x808002000003004),
            U128(0x800008682100428, 0xa580000002000820),
            U128(0x8004210860a, 0x20800044012000),
            U128(0x8000001008480801, 0x404c200000000800),
            U128(0x392004041c4400, 0x4114000081004730),
            U128(0x4500000102120220, 0x1004056680000008),
            U128(0x4445000004004a86, 0xe200002040000112),
            U128(0xa200048206201940, 0x5039290104081204),
            U128(0x401000803082840c, 0x800200000420020),
            U128(0x4002445000404808, 0x10020000800000c8),
            U128(0x1040880010b1010, 0x890048023602020),
            U128(0x20044008600801, 0x100002202010200),
            U128(0x8000001008480801, 0x404c200000000800),
            U128(0x20200100080881, 0x941a02001200000),
            U128(0x230000000048102, 0x400000801c920148),
            U128(0x230000000048102, 0x400000801c920148),
            U128(0x42066000054550, 0x4000000200400082),
            U128(0x801104c000822a, 0x2a00040088000000),
            U128(0x82024, 0x1500000000080004),
            U128(0x82024, 0x1500000000080004),
            U128(0x2006b08002020908, 0x191800100020800),
            U128(0x8040220004911a02, 0x1201000002000504),
            U128(0x2008e0009c800401, 0x141040030008145),
            U128(0x802002061100141, 0x41b008000591004),
            U128(0x42066000054550, 0x4000000200400082),
            U128(0x40400042000044, 0x4195602040402040),
            U128(0x9000046080000020, 0x28c0004000086000),
            U128(0x4240200000810014, 0x1050000140006042),
            U128(0x4c1000000a608012, 0x821000400000000c),
            U128(0x1600000820800408, 0x22a0004000580202),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x2000804100000000, 0x910002014100c200),
            U128(0x802002061100141, 0x41b008000591004),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x40400042000044, 0x4195602040402040),
            U128(0x280101040, 0x2100068009200380),
            U128(0x4240200000810014, 0x1050000140006042),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x802002061100141, 0x41b008000591004),
            U128(0x4c1000000a608012, 0x821000400000000c),
            U128(0x280101040, 0x2100068009200380),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
        },
        //white
        std::array{
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x0, 0x0),
            U128(0x408a0400200000, 0x42b0490000428),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x13010000082000, 0x204040400200),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x407300040104002, 0x808002000003004),
            U128(0x802002061100141, 0x41b008000591004),
            U128(0x13010000082000, 0x204040400200),
            U128(0x408a0400200000, 0x42b0490000428),
            U128(0x40400042000044, 0x4195602040402040),
            U128(0x4210000000023c, 0x4000000000400400),
            U128(0x890102040010000, 0x1400401000400),
            U128(0x408082000414002, 0xa0000000000480),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x46226000101a160, 0x20060000c01075),
            U128(0x13010000082000, 0x204040400200),
            U128(0x2006b08002020908, 0x191800100020800),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x401120000000, 0x108000080000048),
            U128(0x1038080800210018, 0x1100340220a),
            U128(0x520068c02500a00, 0x840044000900104),
            U128(0x8008121488008010, 0x9a800800001045),
            U128(0x8008121488008010, 0x9a800800001045),
            U128(0x61040a8088480006, 0x201801088),
            U128(0x111010520000008, 0x108410000140e8),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x2028822248000003, 0x8942260016000080),
            U128(0x8d18041c68240800, 0x2020043018040c68),
            U128(0x8008121488008010, 0x9a800800001045),
            U128(0x20081200800004, 0x4000008001520404),
            U128(0x100104840a800300, 0x84029089011),
            U128(0xc003011109002002, 0x80442023100),
            U128(0xc088090104000, 0x8000080000a),
            U128(0x8001002080100001, 0x4480042204000b00),
            U128(0x4800408008100220, 0x40001a0800809018),
            U128(0x180822080900, 0x1808800042080),
            U128(0x102c04089214400, 0x40082c4080620000),
            U128(0x80a101012810008, 0x31010020600),
            U128(0x8880100221010, 0x4120208100000100),
            U128(0x410210a00800800, 0x280822068001080),
            U128(0x3020401c008c200, 0x410048006106800),
            U128(0x8408020802082, 0x444000080140073),
            U128(0x1008410008121000, 0x500008100010),
            U128(0x404011224101020, 0x1800010828944c),
            U128(0x9010101020090400, 0x9000400820000000),
            U128(0x2020140053a0, 0x2000020000400000),
            U128(0x802002101300e280, 0x4419000080c0c021),
            U128(0xc010100032802042, 0x29060061100020),
            U128(0x202a000c0410801e, 0x8020280000992048),
            U128(0x1c4120190090a040, 0x1020000000500000),
            U128(0x400080c2c2008, 0x21002008000010),
            U128(0x2008409415102008, 0x100810028000080),
            U128(0xa09401004211004, 0x48000006004001),
            U128(0x202014101480, 0xaa09000430052000),
            U128(0x4121810008285, 0x10030083b070106),
            U128(0x802002101300e280, 0x4419000080c0c021),
            U128(0x802002101300e280, 0x4419000080c0c021),
            U128(0x4012080250880, 0x2000400108400001),
            U128(0x400102300208003, 0x8800022008086400),
            U128(0x48000a4080a41022, 0x1000a00060040000),
            U128(0x100010806040808, 0x1040800290000000),
            U128(0x1000b12020600088, 0x2480000400000180),
            U128(0xa00010001c900413, 0x610103000c0000),
            U128(0x100140400880c02, 0x8180000008080000),
        },
    };

    constexpr std::array kBishopMagics = {
        U128(0x44040013800200, 0x188000020408420b),   U128(0x10013080081420, 0x4012004506910040),
        U128(0x9024020048010a22, 0x572c10050000143),  U128(0x2408040040121, 0x10402902000),
        U128(0x81080288040000, 0x12000141401a81),     U128(0x5120840100408200, 0x1080042a68132000),
        U128(0x4000812300904066, 0x886810002000000),  U128(0x40200c810004c021, 0x10008031a0204140),
        U128(0x80207258c2804000, 0x2000080001440000), U128(0x60a1021604100204, 0x402000080280404),
        U128(0x602840202a01400, 0x9008200100000100),  U128(0x108420956100314, 0x10424604004106),
        U128(0x1048040602103, 0x4014001000010080),    U128(0x44010120830420, 0x5000000012002),
        U128(0x8200204018120000, 0x4a86000400000020), U128(0x308004002801020, 0x440200040003),
        U128(0x10013080081420, 0x4012004506910040),   U128(0x2400101004980220, 0xc0000a208003a000),
        U128(0x842008048281c104, 0x2020000040018000), U128(0x54022c89800183, 0x400144101001200),
        U128(0x8400420280801000, 0x2040001400000080), U128(0x2000090608404, 0x404800841000),
        U128(0x2000090608404, 0x404800841000),        U128(0x3104040a1008001, 0x800010840000020),
        U128(0x801082047040, 0x500400002098000),      U128(0x880140100420, 0x28001008200200e0),
        U128(0x22008000104c0604, 0x9824340080280080), U128(0x520800404087c124, 0x1004500001481000),
        U128(0x1080010114108, 0x2080000064000001),    U128(0x40220000100090, 0x100040441060029),
        U128(0x4020002080100, 0x1100004004000000),    U128(0x8018010002040060, 0x20040800c0210810),
        U128(0x400200120900080, 0x402200108840200),   U128(0x2400101004980220, 0xc0000a208003a000),
        U128(0x2011142180c22010, 0x400000002080610),  U128(0x20d04000424054, 0x8010a1040400000),
        U128(0x53088044110420, 0x6014000000001c40),   U128(0x24280204440c040, 0x80041c209002011),
        U128(0x60040006012, 0x8400800400200100),      U128(0x4002100080002844, 0x8003581008940),
        U128(0x6000054002002001, 0x20004000400800),   U128(0x9024108074021000, 0x6000004200080041),
        U128(0x210690004802, 0x100000080805200),      U128(0x24004020503086, 0x2100000140600044),
        U128(0x1000109002000802, 0x400001000400011),  U128(0x80102844002450, 0xa08201000000880),
        U128(0x8012002100818404, 0x4400100019044808), U128(0x800b0040220020, 0x300262500088000),
        U128(0x200504100800102, 0x401000882000010),   U128(0xa100120010084, 0x280001600000420),
        U128(0x2c088010018008, 0x40040010001600),     U128(0x10000804040006, 0x94800000810280),
        U128(0x22040a0250380440, 0x8021009000092001), U128(0x80061000d080070, 0x8100448006000104),
        U128(0x2002419620a, 0x48081062a0220046),      U128(0xc9088100227000, 0x104002002002104c),
        U128(0x8501804010, 0x800810000400800),        U128(0x600000800604014, 0x900800210400000),
        U128(0x8400020100801, 0x4411110300210099),    U128(0x880020421002, 0x4041409620802010),
        U128(0x2000888b00010100, 0x20000002010840f),  U128(0x86048810082a808, 0x300028100240700),
        U128(0x22040a0250380440, 0x8021009000092001), U128(0x20008842a0310082, 0xa10080038800805),
        U128(0x2000405020081482, 0x28205082100041),   U128(0x4400040620040940, 0x4020092001004401),
        U128(0x102402014090220, 0x4890000000000025),  U128(0x208001041005008, 0x41080014000),
        U128(0x8044a04a040a408, 0x900000006401402),   U128(0x800080040201244, 0x21000800890),
        U128(0x4008031202004, 0x80002a0191),          U128(0x10013080081420, 0x4012004506910040),
        U128(0x10013080081420, 0x4012004506910040),   U128(0x2020840128c010, 0x20409041c408a209),
        U128(0x1000000082040910, 0x2002004001801000), U128(0x9168082214020908, 0x3006014880500020),
        U128(0x404121020012904, 0x804002200100000),   U128(0x922824022000404, 0x8400000a40405080),
        U128(0x2010010212004004, 0x2900a9000080200),  U128(0x7831900840822810, 0x4111004e20241192),
        U128(0x1002001880c00103, 0x203010020020204),
    };

    constexpr std::array kRookMagics = {
        U128(0x40000604000200, 0x1020020400810451),   U128(0x100024030010200, 0x6042004200280000),
        U128(0x500010805010600, 0x120002004080000c),  U128(0x480040000880031, 0x4002220000118025),
        U128(0x2040010008002aa0, 0x9c0000401008),     U128(0x8080008020808400, 0x8800008901400104),
        U128(0xa500102100408800, 0x1400040004014880), U128(0xc280028020004202, 0x24600082124900),
        U128(0x4280005020080002, 0x202025c050180808), U128(0x40200088008090, 0x8000000084700800),
        U128(0x200400008100, 0x80006049400800),       U128(0x800158008100, 0x4200046000000137),
        U128(0x2040200200040010, 0x1000402001064140), U128(0x480200040800810, 0x80100208000400),
        U128(0x880800184842800, 0x410080500000202),   U128(0x480200015300200, 0x1400000080021008),
        U128(0x9020800020000408, 0x800c01000608110),  U128(0x100400010000084, 0x1080600402001024),
        U128(0x4540613000008100, 0x20140022026108),   U128(0x8108000800004080, 0x40001000404c00),
        U128(0xa401124002020041, 0x200801028407000),  U128(0x6400f001000200, 0x1000000414002400),
        U128(0x2906402001001020, 0x400410400000b),    U128(0x40200040004c, 0x408004000100208),
        U128(0xc000100082028c0, 0x1020001100024000),  U128(0x80b800800005400d, 0x800104080008a08),
        U128(0x1280604001200400, 0x8080100410000408), U128(0xa084100078000200, 0x1060810400000010),
        U128(0x9010000804000a82, 0x2004080038002001), U128(0x200128008000, 0xc0010001c6002001),
        U128(0x100110110010240, 0x100100200290100),   U128(0x3200820008002003, 0x6000000500000),
        U128(0x20228008006001, 0x3000102108000),      U128(0x3500800120004009, 0x104005808100122),
        U128(0x2110602040008850, 0x1098000400008000), U128(0x100400010000084, 0x1080600402001024),
        U128(0x280800040001, 0x14608024000401),       U128(0x90140004020000, 0x4002020040000001),
        U128(0x8c20304400180042, 0x9050883e00060),    U128(0x800200a00040010, 0x1000480000304013),
        U128(0x4000004000300018, 0x4010001000000000), U128(0x104002002880008, 0x800088020000040),
        U128(0xc00400020480048, 0x4000222020440),     U128(0x2000801022a00010, 0x118014001100002),
        U128(0x1000008010100001, 0x9428400088014002), U128(0x80100008010200, 0x110000150000420),
        U128(0x2584080005000100, 0x40040081000410),   U128(0x508000400088200, 0x880a00400001008),
        U128(0x44040013800200, 0x188000020408420b),   U128(0x3000400280800400, 0x200a400e0424100c),
        U128(0x880800184842800, 0x410080500000202),   U128(0x480200015300200, 0x1400000080021008),
        U128(0x8180850101101000, 0x880800000004830),  U128(0xa000082840180800, 0x901002a00002c0),
        U128(0x280800040001, 0x14608024000401),       U128(0x40202400a4070004, 0x8000000044931080),
        U128(0x8c20304400180042, 0x9050883e00060),    U128(0x1104220008048001, 0x4042100601043),
        U128(0x3200820008002003, 0x6000000500000),    U128(0x20228008006001, 0x3000102108000),
        U128(0x4380800100181084, 0x440448008090a),    U128(0x882481020414008, 0x20820040220010),
        U128(0xc080002004208084, 0x40029108c540),     U128(0x90000400290ac40, 0xa20000200008a004),
        U128(0x200400008100, 0x80006049400800),       U128(0x800158008100, 0x4200046000000137),
        U128(0x44040013800200, 0x188000020408420b),   U128(0x410004a009004000, 0x4900000161100060),
        U128(0xb388002108400400, 0x300042624842241),  U128(0x1200030600024, 0x80042000440202),
        U128(0x8841004210404009, 0x2400000000006182), U128(0x820218088882d00, 0x4200001040088005),
        U128(0x10001000008c0004, 0x4211c00040000002), U128(0x101040000810000, 0x8001600180001000),
        U128(0x2008600082000640, 0x284000b0011890),   U128(0x8058000800a44004, 0x4800200180009000),
        U128(0x60008042000, 0x6202400063440000),      U128(0x51820800070a000, 0x8040000040c043),
        U128(0x8001000004004400, 0x200200080502080),  U128(0x41004104802012, 0x2282000004400002),
        U128(0x1030911410221001, 0x111000010000002),
    };

    [[nodiscard]] constexpr std::span<const i32, Squares::kCount> lanceShifts(Color c) {
        assert(c);
        return kLanceShifts[c.idx()];
    }

    [[nodiscard]] constexpr std::span<const u128, Squares::kCount> lanceMagics(Color c) {
        assert(c);
        return kLanceMagics[c.idx()];
    }
} // namespace stoat::attacks::sliders::black_magic
